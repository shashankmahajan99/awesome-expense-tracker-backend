@startuml LoginUser
title User Authentication API Workflow

actor Client
participant "User Authentication\nService" as Service
participant "User Store" as Store
participant "Google OAuth\nProvider" as OAuth

Client -> Service : Send LoginUser request
Service -> Service : Validate request
alt Invalid request
    Service -> Client : Return INVALID_REQUEST error
else Valid request
    alt Authenticate with OAuth
        Service -> Service : Get OAuth URL
        Service -> Client : Return successful response with OAuth URL
        Client -> OAuth : Redirect to AuthUrl
        Client -> OAuth : Send OAuth URL
        OAuth -> Client : Send OAuth Code
        Client -> Service : Send AuthenticateWithGoogleCallback request with OAuth Code
        Service -> OAuth : AuthenticateWithGoogleCallback exchange OAuth Code for OAuth Token
        OAuth -> Service : Send OAuth Token
        Service -> OAuth : AuthenticateWithGoogleCallback exchange OAuth Token for OAuth User Info
        OAuth -> Service : Send OAuth User Info
        Service -> Store : ListUserByEmail
        alt Email already exists
            Service -> Client : Return successful response with JWT token
        else Email does not exist
            Service -> Store : CreateUser
            Service -> Client : Return successful response with JWT token
        end
    else Validate username and password
        Service -> Store : ListUserByUsername
        alt User not found
            Service -> Client : Return USER_DOES_NOT_EXIST error
        else User found
            Service -> Service : CompareHashAndPassword
            alt Password incorrect
                Service -> Client : Return INCORRECT_PASSWORD error
            else Password correct
                Service -> Service : Generate JWT token
                alt Token generation error
                    Service -> Client : Return INTERNAL_ERROR
                else Token generated
                    Service -> Service : Parse JWT token
                    alt Token parsing error
                        Service -> Client : Return INTERNAL_ERROR
                    else Token parsed
                        Service -> Client : Return successful response with JWT token
                    end
                end
            end
        end
    end
end
@enduml