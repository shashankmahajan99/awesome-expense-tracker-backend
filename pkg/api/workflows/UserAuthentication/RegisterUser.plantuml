@startuml RegisterUser
title User Registeration API Workflow

actor Client
participant "User Authentication\nService" as Service
participant "User Store" as Store
participant "Google OAuth\nProvider" as OAuth

Client -> Service : Send RegisterUser request
Service -> Service : Validate request
alt Invalid request
    Service -> Client : Return INVALID_REQUEST error
else Valid request
    Service -> Store : ListUserByEmail
    alt Email already exists
        Service -> Client : Return EMAIL_ALREADY_EXIST error
    else Email does not exist
        Service -> Store : ListUserByUsername
        alt Username already exists
            Service -> Client : Return USERNAME_ALREADY_EXIST error
        else Username does not exist
            alt Register with OAuth
                Service -> Service : authenticateWithGoogle
                Service -> Client : Return successful response with AuthUrl
                Client -> OAuth : Redirect to AuthUrl
                Client -> OAuth : Send OAuth URL
                OAuth -> Client : Send OAuth Code
                Client -> Service : Send AuthenticateWithGoogleCallback request with OAuth Code
                Service -> OAuth : AuthenticateWithGoogleCallback exchange OAuth Code for OAuth Token
                OAuth -> Service : Send OAuth Token
                Service -> OAuth : AuthenticateWithGoogleCallback exchange OAuth Token for OAuth User Info
                OAuth -> Service : Send OAuth User Info
                Service -> Store : ListUserByEmail
                alt Email already exists
                    Service -> Client : Return successful response with JWT token
                else Email does not exist
                    Service -> Store : CreateUser
                    Service -> Client : Return successful response with JWT token
                end
            else Register with Username and Password
                Service -> Service : GenerateFromPassword
                alt GenerateFromPassword error
                    Service -> Client : Return INCORRECT_PASSWORD error
                else Password correct
                    Service -> Store : CreateUser
                    Service -> Client : Return successful response with JWT token
                end
            end
        end
    end
end

@enduml